BUFFER_ADDR = 2020h
ADDR_START  = 2022h
ADDR_END    = 2024h

TOK_HEX   = 'H'
TOK_ERROR = '?'

	; =============================================
	;
	; Run the monitor
	;
	; =============================================

monitor:
	ld	hl, .str_welcome
	call	SYS_PRINT

.next_line:
	ld	hl, .str_prompt
	call	SYS_PRINT

	ld	hl, BUFFER_ADDR
	call	SYS_INPUT

	; =============================================
	; 
	; State machine
	;   diagram: https://github.com/andrenho/fortuna-box/wiki/Monitor
	;
	; =============================================

.state_machine:
	call	.parse_next_token

	cp	TOK_HEX
	jr	z, .sm_addr

	jr	.syntax_error

.sm_addr:
	ld	(ADDR_START), de

	call	.parse_next_token

	cp	13
	call	.print_mem

	jp	.next_line

.syntax_error:
	ld	hl, .str_syntax_error
	call	SYS_PRINT
	jp	.next_line

	; =============================================
	; 
	; Parse the next token in HL string. Returns:
	;    A - the token
	;    DE - if token is hex, the value
	;    HL - pointer to next token
	;
	; =============================================

.parse_next_token:
	ld	a, (hl)		; A = next char
	ld	b, TOK_ERROR	; B = token to return if hex
	ld	de, 0		; DE = the hex value

	cp	' '		; skip spaces
	jr	z, .parse_next_token

.check_token_chars:
	cp	13		; check for enter, dot, colon, r, i, o, space
	ret	z
	cp	'.'
	ret	z
	cp	':'
	ret	z
	cp	'r'
	ret	z
	cp	'i'
	ret	z
	cp	'o'
	ret	z

.check_digit:
	cp	'0'
	jr	c, .check_ucase_hex
	cp	'9' + 1
	jr	nc, .check_ucase_hex

	sub	'0'
	jr	.add_hex_in_a

.check_ucase_hex:
	cp	'A'
	jr	c, .check_lcase_hex
	cp	'F' + 1
	jr	nc, .check_lcase_hex

	sub	'A' - 0ah
	jr	.add_hex_in_a
	
.check_lcase_hex:
	cp	'a'
	jr	c, .not_hex
	cp	'f' + 1
	jr	nc, .not_hex

	sub	'a' - 0ah
	jr	.add_hex_in_a
	
.not_hex:
	ld	a, b
	ret

.add_hex_in_a:
	ld	b, TOK_HEX	; B = is HEX

	push	hl		; rotate left DE (4 bits)
	ld	h, d
	ld	l, e
	add	hl, hl
	add	hl, hl
	add	hl, hl
	add	hl, hl
	ld	d, h
	ld	e, l
	pop	hl

	or	a, e		; DE |= A
	ld	e, a

	inc	hl		; next char
	ld	a, (hl)
	jr	.check_digit

	; =============================================
	; 
	; Actions executed in result of user requests
	; 
	; =============================================
	
print_mem:
	; TODO
	ret

	; =============================================
	; 
	; Strings
	; 
	; =============================================

.str_welcome:
	asciiz	"Fortuna Box monitor", 13, 10

.str_prompt:
	asciiz "* "

.str_syntax_error:
	asciiz "Syntax error", 13, 10

; vim:ts=8:sw=8:sts=8:noexpandtab
